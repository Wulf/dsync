name: Continuous Integration
on: 
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  
concurrency:
  group:  CI-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-dev-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build --all-targets

  clippy:
    name: cargo clippy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup component add clippy
      - uses: actions/cache@v3
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-dev-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy --all

  test-script:
    name: test-scripts
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-dev-${{ hashFiles('**/Cargo.lock') }}
      - run: bash test/test_all.sh
      - run: git diff --exit-code --quiet || exit 1
      
  # things that use the cargo-test cache
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ./.cargo/.build
            ./target
            ~/.cargo
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo test
  
  
  # Things that don't need a cache
  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check
    
  release:
    runs-on: ubuntu-latest
    name: release
    needs: [build, clippy, test, test-script, fmt]
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish
        env: 
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
